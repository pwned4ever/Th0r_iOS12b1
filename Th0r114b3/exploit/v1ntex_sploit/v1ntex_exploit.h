//
//  exploit.h
//  v1ntex
//
//  Created by tihmstar on 23.01.19.
//  Copyright Â© 2019 tihmstar. All rights reserved.
//

#ifndef v1ntex_exploit_h
#define v1ntex_exploit_h
#include "v1ntex_offsets.h"
#include <mach/mach_types.h>
#include "../../headers/common.h"
extern uint64_t v3task_port_kaddr;// = MACH_PORT_NULL;
extern uint64_t v3task_port_kaddr1;
extern mach_port_t user_clientnewv3;
extern uint64_t kernel_task_newadd;
extern mach_port_t v3tfp0;// = MACH_PORT_NULL;
extern uint32_t KNNTASKPROCv3tfp0;//extern uint64_t v3task_port_kaddr;
extern uint64_t cached_task_self_addr;
extern uint64_t cached_task_self_addr1proc;
extern uint64_t newself_procV1ntex;
extern uint64_t vkern_ucreds;
extern uint64_t vself_ucreds;
typedef kern_return_t (*v1ntex_cb_t)(task_t kernel_task, kptr_t kbase, void* data);
int v1ntex(v1ntex_cb_t callback, void* cb_data, v1ntex_offsets* v1ntex_offs);
extern kptr_t kbase;
#endif /* v1ntex_exploit_h */
