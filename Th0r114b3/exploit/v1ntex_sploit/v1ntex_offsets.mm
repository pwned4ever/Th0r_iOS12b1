//
//  v1ntex_offsets.mm


#include "v1ntex_offsets.h"
#include "../../headers/liboffsetfinder64.hpp"
#include <sys/sysctl.h>
#include <sys/utsname.h>

static v1ntex_offsets v1ntex_offs;

extern "C" v1ntex_offsets* get_v1ntex_offsets(const char* filename)
{   struct utsname u = { 0 };
        uname(&u);// || (!strcmp(u.machine, "iPhone7,1") || (!strcmp(u.machine, "iPhone7,2")))
    
    
    if (!strcmp(u.machine, "iPhone6,1") || (!strcmp(u.machine, "iPhone6,2"))) {
        printf("i5s & i6  & 6+ -----------\n");
        
        LOG("Initializing offsetfinder64...");
        tihmstar::offsetfinder64 fi(filename);
        //offsetfinder64 fi("/var/mobile/Media/kernelcache");
        
        printf("Initialized offsetfinder\n");
        LOG("Successfully initialized offsetfinder64.");
        LOG("Finding offsets for v1ntex with liboffsetfinder64...");
        try {/*
              #define OFF_CSBLOB_GET_ADDR 0XFFFFFFF0073C29A8
              #define OFF_CSBLOB_GET_BASE_OFFSET 0XFFFFFFF0073C2998
              #define OFF_CSBLOB_GET_CDHASH 0XFFFFFFF0073C2A5C
              #define OFF_CSBLOB_GET_ENTITLEMENTS 0XFFFFFFF007426F4C
              #define OFF_CSBLOB_GET_FLAGS 0XFFFFFFF0073C29CC
              #define OFF_CSBLOB_GET_HASHTYPE 0XFFFFFFF0073C29D4
              #define OFF_CSBLOB_GET_IDENTITY 0XFFFFFFF0073C2A30
              #define OFF_CSBLOB_GET_PLATFORM_BINARY 0XFFFFFFF0073C29B0
              #define OFF_CSBLOB_GET_SIGNER_TYPE 0XFFFFFFF0073C2A64
              #define OFF_CSBLOB_GET_SIZE 0XFFFFFFF0073C29A0
              #define OFF_CSBLOB_GET_TEAMID 0XFFFFFFF0073C2A28
              #define OFF_CSFG_GET_CDHASH 0XFFFFFFF0073C2C5C
              #define OFF_CSFG_GET_IDENTITY 0XFFFFFFF0073C2E20
              #define OFF_CSFG_GET_PATH 0XFFFFFFF0073C2FCC
              #define OFF_CSFG_GET_PLATFORM_BINARY 0XFFFFFFF0073C2BE4
              #define OFF_CSFG_GET_PLATFORM_IDENTIFIER 0XFFFFFFF0073C2E8C
              #define OFF_CSFG_GET_PROD_SIGNED 0XFFFFFFF0073C2DA4
              #define OFF_CSFG_GET_SIGNER_TYPE 0XFFFFFFF0073C2CBC
              #define OFF_CSFG_GET_TEAMID 0XFFFFFFF0073C2D30
              #define OFF_CSPROC_GET_BLOB 0XFFFFFFF0073C29EC
              #define OFF_CSPROC_GET_PLATFORM_BINARY 0XFFFFFFF0073C2B8C
              #define OFF_CSPROC_GET_PLATFORM_IDENTIFIER 0XFFFFFFF0073C2F54
              #define OFF_CSPROC_GET_PROD_SIGNED 0XFFFFFFF0073C2BD4
              efine OFF_PROC_CHROOTED 0XFFFFFFF0073F0624
              #define OFF_PROC_EXITING 0XFFFFFFF0073ED798
              #define OFF_PROC_FIND 0XFFFFFFF0073ECEA4
              #define OFF_PROC_FORCEQUOTA 0XFFFFFFF0073ED7A8
              #define OFF_PROC_GETCDHASH 0XFFFFFFF0073ED874
              #define OFF_PROC_GETEXECUTABLEVNODE 0XFFFFFFF0073ED88C
              #define OFF_PROC_IS64BIT 0XFFFFFFF0073ED848
              #define OFF_PROC_ISINFERIOR 0XFFFFFFF0073ECB38
              #define OFF_PROC_ISSIGNAL 0XFFFFFFF0073ED6C8
              #define OFF_PROC_IS_CLASSIC 0XFFFFFFF0073EF074
              #define OFF_PROC_IS_FORCING_HFS_CASE_SENSITIVITY 0XFFFFFFF0073EF07C
              #define OFF_PROC_NAME 0XFFFFFFF0073ED4F4
              #define OFF_PROC_NOREMOTEHANG 0XFFFFFFF0073ED788
              #define OFF_PROC_PGRPID 0XFFFFFFF0073F0374
              #define OFF_PROC_PID 0XFFFFFFF0073ECFF0
              #define OFF_PROC_PIDBACKGROUNDED 0XFFFFFFF007469C84
              #define OFF_PROC_PIDVERSION 0XFFFFFFF0073ED864
              #define OFF_PROC_PPID 0XFFFFFFF0073ED3E4
              #define OFF_PROC_RELE 0XFFFFFFF0073ECE14
              #define OFF_PROC_SELF 0XFFFFFFF0073ECFA8
              #define OFF_PROC_SELFNAME 0XFFFFFFF0073ED5C0
              #define OFF_PROC_SELFPGRPID 0XFFFFFFF0073F037C
              #define OFF_PROC_SELFPID 0XFFFFFFF0073ED3F8
              #define OFF_PROC_SELFPPID 0XFFFFFFF0073ED410
              #define OFF_PROC_SET_RESPONSIBLE_PID 0XFFFFFFF0073F0618
              #define OFF_PROC_SIGNAL 0XFFFFFFF0073ED600
              #define OFF_PROC_SUSER 0XFFFFFFF0073ED7B8
              #define OFF_PROC_TASK 0XFFFFFFF0073ED838
              #define OFF_PROC_UCRED 0XFFFFFFF0073ED840
              #define OFF_PROC_UNIQUEID 0XFFFFFFF0073ED86C
              #define OFF_PROTO_INJECT 0XFFFFFFF00724C9E4
              #define OFF_PROTO_INPUT 0XFFFFFFF00724C8F4
              #define OFF_KAUTH_AUTHORIZE_ACTION 0XFFFFFFF0073BF2BC
              #define OFF_KAUTH_AUTHORIZE_PROCESS 0XFFFFFFF0073BF3B4
              #define OFF_KAUTH_CRED_CREATE 0XFFFFFFF0073C11B0
              #define OFF_KAUTH_CRED_DSNODE2NFS4DOMAIN 0XFFFFFFF0073C073C
              #define OFF_KAUTH_CRED_FIND 0XFFFFFFF0073C1394
              #define OFF_KAUTH_CRED_GET 0XFFFFFFF0073C0BA8
              #define OFF_KAUTH_CRED_GETGID 0XFFFFFFF0073C04D0
              #define OFF_KAUTH_CRED_GETGROUPS 0XFFFFFFF0073C1DC8
              #define OFF_KAUTH_CRED_GETGUID 0XFFFFFFF0073C07B0
              #define OFF_KAUTH_CRED_GETNTSID 0XFFFFFFF0073C08B4
              #define OFF_KAUTH_CRED_GETRGID 0XFFFFFFF0073C051C
              #define OFF_KAUTH_CRED_GETRUID 0XFFFFFFF0073C0438
              #define OFF_KAUTH_CRED_GETSVGID 0XFFFFFFF0073C0568
              #define OFF_KAUTH_CRED_GETSVUID 0XFFFFFFF0073C0484
              #define OFF_KAUTH_CRED_GETUID 0XFFFFFFF0073C03EC
              #define OFF_KAUTH_CRED_GET_WITH_REF 0XFFFFFFF0073C1058
              #define OFF_KAUTH_CRED_GID2GUID 0XFFFFFFF0073C0858
              #define OFF_KAUTH_CRED_GID2NTSID 0XFFFFFFF0073C0920
              #define OFF_KAUTH_CRED_GRNAM2GUID 0XFFFFFFF0073C05CC
              #define OFF_KAUTH_CRED_GUID2GID 0XFFFFFFF0073C0684
              #define OFF_KAUTH_CRED_GUID2GRNAM 0XFFFFFFF0073C05BC
              #define OFF_KAUTH_CRED_GUID2NTSID 0XFFFFFFF0073C0928
              #define OFF_KAUTH_CRED_GUID2PWNAM 0XFFFFFFF0073C05B4
              #define OFF_KAUTH_CRED_GUID2UID 0XFFFFFFF0073C05D4
              #define OFF_KAUTH_CRED_ISMEMBER_GID 0XFFFFFFF0073C0930
              #define OFF_KAUTH_CRED_ISMEMBER_GUID 0XFFFFFFF0073C0974
              #define OFF_KAUTH_CRED_ISSUSER 0XFFFFFFF0073C0B04
              #define OFF_KAUTH_CRED_LABEL_UPDATE 0XFFFFFFF0073C1FBC
              #define OFF_KAUTH_CRED_NFS4DOMAIN2DSNODE 0XFFFFFFF0073C0734
              #define OFF_KAUTH_CRED_NTSID2GID 0XFFFFFFF0073C074C
              #define OFF_KAUTH_CRED_NTSID2GUID 0XFFFFFFF0073C0754
              #define OFF_KAUTH_CRED_NTSID2UID 0XFFFFFFF0073C0744
              #define OFF_KAUTH_CRED_PROC_REF 0XFFFFFFF0073C0C14
              #define OFF_KAUTH_CRED_PWNAM2GUID 0XFFFFFFF0073C05C4
              #define OFF_KAUTH_CRED_REF 0XFFFFFFF0073C1140
              #define OFF_KAUTH_CRED_UID2GUID 0XFFFFFFF0073C075C
              #define OFF_KAUTH_CRED_UID2NTSID 0XFFFFFFF0073C08AC
              #define OFF_KAUTH_CRED_UNREF 0XFFFFFFF0073C0FE0
              #define OFF_KAUTH_DEREGISTER_SCOPE 0XFFFFFFF0073BEFF0
              #define OFF_KAUTH_FILESEC_ALLOC 0XFFFFFFF0073BFD24
              #define OFF_KAUTH_FILESEC_FREE 0XFFFFFFF0073BFDB8
              #define OFF_KAUTH_GETGID 0XFFFFFFF0073C0CF0
              #define OFF_KAUTH_GETRUID 0XFFFFFFF0073C0CA0
              #define OFF_KAUTH_GETUID 0XFFFFFFF0073C0B58
              #define OFF_KAUTH_GUID_EQUAL 0XFFFFFFF0073C02E0
              #define OFF_KAUTH_LISTEN_SCOPE 0XFFFFFFF0073BF098
              #define OFF_KAUTH_NULL_GUID 0XFFFFFFF0075D10DC
              #define OFF_KAUTH_PROC_LABEL_UPDATE 0XFFFFFFF0073C2030
              #define OFF_KAUTH_REGISTER_SCOPE 0XFFFFFFF0073BECC0
              #define OFF_KAUTH_UNLISTEN_SCOPE 0XFFFFFFF0073BF1B0
#define OFF_IOBSDMOUNTCHANGE 0XFFFFFFF007561F84
              #define OFF_UUID_CLEAR 0XFFFFFFF0074E227C
              #define OFF_UUID_COMPARE 0XFFFFFFF0074E2288
              #define OFF_UUID_COPY 0XFFFFFFF0074E2398
              #define OFF_UUID_GENERATE 0XFFFFFFF0074E24D0
              #define OFF_UUID_GENERATE_RANDOM 0XFFFFFFF0074E23A0
              #define OFF_UUID_GENERATE_TIME 0XFFFFFFF0074E23E4
              #define OFF_UUID_IS_NULL 0XFFFFFFF0074E2514
              #define OFF_UUID_PARSE 0XFFFFFFF0074E25A4
              #define OFF_UUID_UNPARSE 0XFFFFFFF0074E2784
              #define OFF_UUID_UNPARSE_LOWER 0XFFFFFFF0074E2664
              #define OFF_UUID_UNPARSE_UPPER 0XFFFFFFF0074E26F4
              #define OFF_VCOUNT 0XFFFFFFF0071D3094
              #define OFF_VERSION 0XFFFFFFF0070207E4
              #define OFF_VERSION_MAJOR 0XFFFFFFF007020850
              #define OFF_VERSION_MINOR 0XFFFFFFF007020854
              #define OFF_VERSION_PRERELEASE_LEVEL 0XFFFFFFF007020860
              #define OFF_VERSION_REVISION 0XFFFFFFF007020858
              #define OFF_VERSION_STAGE 0XFFFFFFF00702085C
              #define OFF_VERSION_VARIANT 0XFFFFFFF007020864
              #define OFF_VFS_ROOTVNODE 0XFFFFFFF0071F3618
              #define OFF_VFS_CONTEXT_CREATE 0XFFFFFFF0071F3434
              #define OFF_VFS_CONTEXT_CURRENT 0XFFFFFFF0071F2208
              #define OFF_VFS_CONTEXT_CWD 0XFFFFFFF0071F33D8
              #define OFF_VFS_CONTEXT_SET_SPECIAL_PORT 0XFFFFFFF0071F33BC
              #define OFF_VFS_CONTEXT_SUSER 0XFFFFFFF0071F32EC
              #define OFF_VFS_CONTEXT_UCRED 0XFFFFFFF0071F3588
              #define OFF_VFS_CTX_SKIPATIME 0XFFFFFFF0071F3760
              #define OFF_PRIV_CHECK_CRED 0XFFFFFFF0073EC914
              
              #define OFF_POPULATE_MODEL_NAME 0XFFFFFFF0070C05C4
              #define OFF_PORT_NAME_TO_TASK 0XFFFFFFF0070C5C1C
              #define OFF_PORT_NAME_TO_THREAD 0XFFFFFFF0070C5ADC
              #define OFF_POST_SYS_POWERSOURCE 0XFFFFFFF007173108
              #define OFF_PROC_CHROOTED 0XFFFFFFF0073F0624
              #define OFF_PROC_EXITING 0XFFFFFFF0073ED798
              #define OFF_PROC_FIND 0XFFFFFFF0073ECEA4
              #define OFF_PROC_FORCEQUOTA 0XFFFFFFF0073ED7A8
              #define OFF_PROC_GETCDHASH 0XFFFFFFF0073ED874
              #define OFF_PROC_GETEXECUTABLEVNODE 0XFFFFFFF0073ED88C
              #define OFF_PROC_IS64BIT 0XFFFFFFF0073ED848
              #define OFF_PROC_ISINFERIOR 0XFFFFFFF0073ECB38
              #define OFF_PROC_ISSIGNAL 0XFFFFFFF0073ED6C8
              #define OFF_PROC_IS_CLASSIC 0XFFFFFFF0073EF074
              #define OFF_PROC_IS_FORCING_HFS_CASE_SENSITIVITY 0XFFFFFFF0073EF07C
              #define OFF_PROC_NAME 0XFFFFFFF0073ED4F4
              #define OFF_PROC_NOREMOTEHANG 0XFFFFFFF0073ED788
              #define OFF_PROC_PGRPID 0XFFFFFFF0073F0374
              #define OFF_PROC_PID 0XFFFFFFF0073ECFF0
              #define OFF_PROC_PIDBACKGROUNDED 0XFFFFFFF007469C84
              #define OFF_PROC_PIDVERSION 0XFFFFFFF0073ED864
              #define OFF_PROC_PPID 0XFFFFFFF0073ED3E4
              #define OFF_PROC_RELE 0XFFFFFFF0073ECE14
              #define OFF_PROC_SELF 0XFFFFFFF0073ECFA8
              #define OFF_PROC_SELFNAME 0XFFFFFFF0073ED5C0
              #define OFF_PROC_SELFPGRPID 0XFFFFFFF0073F037C
              #define OFF_PROC_SELFPID 0XFFFFFFF0073ED3F8
              #define OFF_PROC_SELFPPID 0XFFFFFFF0073ED410
              #define OFF_PROC_SET_RESPONSIBLE_PID 0XFFFFFFF0073F0618
              #define OFF_PROC_SIGNAL 0XFFFFFFF0073ED600
              #define OFF_PROC_SUSER 0XFFFFFFF0073ED7B8
              #define OFF_PROC_TASK 0XFFFFFFF0073ED838
              #define OFF_PROC_UCRED 0XFFFFFFF0073ED840
              #define OFF_PROC_UNIQUEID 0XFFFFFFF0073ED86C
              #define OFF_PROTO_INJECT 0XFFFFFFF00724C9E4

              
              
              
              
*/
            
            v1ntex_offs.offset_zone_map = 0XFFFFFFF0075D1030;
            v1ntex_offs.offset_kernel_map = 0XFFFFFFF0075D1030;
            v1ntex_offs.offset_kernel_task = 0XFFFFFFF0075D1048;
            v1ntex_offs.offset_realhost =0XFFFFFFF0074B9BB4;
            v1ntex_offs.offset_bzero = 0XFFFFFFF007089FC0;
            v1ntex_offs.offset_bcopy = 0XFFFFFFF007089E00;
            v1ntex_offs.offset_copyin = 0XFFFFFFF00719E784;
            v1ntex_offs.offset_copyout = 0XFFFFFFF00719E9A8;
            v1ntex_offs.offset_ipc_port_alloc_special = 0XFFFFFFF00754F588;
            v1ntex_offs.offset_ipc_kobject_set = 0XFFFFFFF00713C640;
            v1ntex_offs.offset_ipc_port_make_send = 0XFFFFFFF0070ACB58;
            v1ntex_offs.offset_rop_ldr_r0_r0_0xc = 0XFFFFFFF0070ADB40;
            v1ntex_offs.offset_chgproccnt = 0XFFFFFFF0070ADB48;
            v1ntex_offs.offset_kauth_cred_ref = 0XFFFFFFF0073C1140;
            v1ntex_offs.offset_OSSerializer_serialize = 0XFFFFFFF0074D72D0;
            LOG("Successfully found offsets for v1ntex with offsetfinder64.");
            
            return &v1ntex_offs;
            
        }
        catch (tihmstar::exception& e) {
            LOG("Failed to find offsets for v1ntex with offsetfinder64 with a non-fatal error. %d (%s).", e.code(), e.what());
            return NULL;
        } catch (std::exception& e) {
            LOG("Failed to find offsets for v1ntex with offsetfinder64 with a fatal error. %s.", e.what());
            return NULL;
        }
        
        
        
    }else {
    
        LOG("Initializing offsetfinder64...");
        tihmstar::offsetfinder64 fi(filename);//ipod6_63_f5f2322a48186d6eafada205f01d3d142852d0ef
        LOG("Successfully initialized offsetfinder64.");
        LOG("Finding offsets for v1ntex with liboffsetfinder64...");
        try {
            v1ntex_offs.offset_zone_map = (kptr_t)fi.find_zone_map();
            v1ntex_offs.offset_kernel_map = (kptr_t)fi.find_kernel_map();
            v1ntex_offs.offset_kernel_task = (kptr_t)fi.find_kernel_task();
            v1ntex_offs.offset_realhost = (kptr_t)fi.find_realhost();
            v1ntex_offs.offset_bzero = (kptr_t)fi.find_bzero();
            v1ntex_offs.offset_bcopy = (kptr_t)fi.find_bcopy();
            v1ntex_offs.offset_copyin = (kptr_t)fi.find_copyin();
            v1ntex_offs.offset_copyout = (kptr_t)fi.find_copyout();
            v1ntex_offs.offset_ipc_port_alloc_special = (kptr_t)fi.find_ipc_port_alloc_special();
            v1ntex_offs.offset_ipc_kobject_set = (kptr_t)fi.find_ipc_kobject_set();
            v1ntex_offs.offset_ipc_port_make_send = (kptr_t)fi.find_ipc_port_make_send();
            v1ntex_offs.offset_rop_ldr_r0_r0_0xc = (kptr_t)fi.find_rop_ldr_x0_x0_0x10();
            v1ntex_offs.offset_chgproccnt = (kptr_t)fi.find_chgproccnt();
            v1ntex_offs.offset_kauth_cred_ref = (kptr_t)fi.find_kauth_cred_ref();
            v1ntex_offs.offset_OSSerializer_serialize = (kptr_t)fi.find_osserializer_serialize();
            LOG("Successfully found offsets for v1ntex with offsetfinder64.");
            
            return &v1ntex_offs;
            
        }
        catch (tihmstar::exception& e) {
            LOG("Failed to find offsets for v1ntex with offsetfinder64 with a non-fatal error. %d (%s).", e.code(), e.what());
            return NULL;
        } catch (std::exception& e) {
            LOG("Failed to find offsets for v1ntex with offsetfinder64 with a fatal error. %s.", e.what());
            return NULL;
        }
        
        
        
        
    }

}
